- Parametrizar lo que voy a programar --> Clase ** El nombre de una clase en mayuscula el primer caracter y en singular.

AUTO -> Clase

Ford Ka -> Instancia de la clase


Nclase
------
+ Atributo (caracteristicas)
+ Atributo
+ Atributo
-------
metodo() (Acciones)
metodo()
metodo()


Auto
------
marca
modelo
precio
------
agregar()
modificar()
eliminar()
--------------------

Noticia
------
-categoria
-titulo
-fecha
-foto
-texto
------
+agregarNoticia()
+editarNoticia()
+eliminarNoticia()
+listarNoticias()
+verNoticiaPorID()

--------------

MVC
Model -> Se modela en relacion a la base de datos
View 
Controller

--------------------

CRUD -> Create Read Update Delete

Las clases se arman en relacion a esto, que es lo bàsico.
--------------------

Public: Se puede acceder desde afuera de la clase.
Private: No se puede acceder desde fuera de la clase.


ECHO es una construccion, no una funcion, pero se puede usar separando lo que se quiere imprimir con ',' en lugar de concatenar con puntos, lo toma igual. Lo que hace con los puntos es concatenar E imprimir.

Para crear una clase nueva se crea un archivo dedicado que se llama igual, ex: Persona.php (Mayuscula y singular).

'class Persona(){' --> El inicio de la declaraciòn de la clase persona.

Para que un atributo sea tal y no una variable, hay que declararlo con la visibilidad (public, protected, private, etc.).

'->' OBJECT OPERATOR

Los getters y setters no van a ir en la gràfica.

'new' -> palabra reservada para instanciar objetos. 

PLUGIN --> PHP Getters and Setters

Buena practica: Nunca acceder directamente al atributo, usar los getters y los setters declarados.


1º- Instanciar
2º- Llamar Metodos


--------------------

Persona
------
-nombre
-apellido
------
+verDatos()

----------------------------------------------------------------------------------------------------

INVESTIGAR QUE ES UN CONSTRUCTOR Y UN DESTRUCTOR EN PHP

- MYSQLI_CONNECT/FETCH_ASSOC/QUERY/etc.